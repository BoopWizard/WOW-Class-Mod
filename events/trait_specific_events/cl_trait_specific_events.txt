namespace = class_event

class_event.0001 = { #Warrior: Baby on Board
	type = character_event #idk what this does
	title = cl_class_event.0001.title
	trigger = {
		has_trait = cl_warrior
		is_ai = no
		is_available = yes
		NOR = { 
		has_character_flag = had_event_class_event.0001
		has_trait_xp = {
						trait = cl_warrior
						track = fury
						value >= 30
					}
		has_trait_xp = {
						trait = cl_warrior
						track = arms
						value >= 30
					}			
		has_trait_xp = {
						trait = cl_warrior
						track = prot
						value >= 30
					}				
		}
		}
	desc = { #desides whether I should reference a relation to the child or not
		first_valid = { #first trigger valid will be the one we go with
			triggered_desc = {
				trigger = {
					scope:baby_scope = {is_courtier_of = root}
				}
				desc = cl_class_event.0001.desc
			}
			triggered_desc = {
				desc = cl_class_event.0001.desc2
			}
		}
	}
	theme = war #decides background
	left_portrait = { #what the left portrait in the event should be. root is you
		character = root 
	   	animation = fear
	}
	right_portrait = { #same but for right. baby_scope is defined later
		character = scope:baby_scope
		animation = idle
	}
	immediate = {
		add_character_flag = {
			flag = had_event_class_event.0001
		}
		if = { #Any >=3y/o child already at court? If so, make them the baby_scope
				limit = { #a limit decides under what conditions the if should fire
					any_courtier_or_guest = { 
					age <= 3
				    is_available = yes
					is_ai = yes
					}
				}
				random_courtier_or_guest = { 
					limit = {age <= 3}
					save_scope_as = baby_scope #defines what baby_scope is
				}
			}
		else = { #No valid child in court, so we make one
				create_character = {
				location = root.location
				culture = root.location.county.culture
				faith = root.location.county.faith
				age =  { 0 3 }
				trait = rowdy
				dynasty = none #lowborn
				save_scope_as = baby_scope
			}				
		}	
	}
	option = { #arms - take a break
		name = cl_class_event.0001.a
		add_trait_xp = {trait = cl_warrior track=arms value=10} #30xp is needed to reach a spec level. 10 is added for every low warrior event
		stress_impact = { 
			diligent = medium_stress_impact_gain
			impatient = medium_stress_impact_gain
			stubborn = minor_stress_impact_gain
		}
		random_list = { #chooses a random option with a 50/50 chance
			50 = {
				desc = cl_class_event.0001.good 
				send_interface_toast = { #an interace toast is that little scroll that pops up in the top middle of your screen sometimes
					type = event_toast_effect_good
					title = cl_class_event.0001.good
					left_icon = root
					add_character_modifier = { #modifiers are those small bonuses you see on your char sheet
					    modifier = cl_warrior_eventmod.2 #defined in cl_class_modifiers 
						years = 1
					}
				}
			}
			50 = {
				desc = cl_class_event.0001.bad
				send_interface_toast = {
					type = event_toast_effect_bad
					title = cl_class_event.0001.bad
					left_icon = root
					add_character_modifier = {
						modifier = cl_warrior_eventmod.1
						years = 1
					}
				}
			}
		}
	}
	option = { #fury GTFO
		name = cl_class_event.0001.b
		add_trait_xp = {trait = cl_warrior track=fury value=10}
		stress_impact = { 
			calm = medium_stress_impact_gain
			patient = medium_stress_impact_gain
			compassionate = low_stress_impact_gain
		}
		reverse_add_opinion = { 
			target = scope:baby_scope
			modifier = cl_hateskids_opinion #modifiers are also used in cl_class_opinions for a different reason. These are like macros for opinon debuffs
		}
	}
	option = { #prot teaching moment
		name = cl_class_event.0001.c
		add_trait_xp = {trait = cl_warrior track=prot value=10}
		stress_impact = { 
			wrathful = medium_stress_impact_gain
			lazy = minor_stress_impact_gain
			shy = minor_stress_impact_gain
			callous = minor_stress_impact_gain
			sadistic = medium_stress_impact_gain
		}
		scope:baby_scope = { #adds 1 prowess to baby_scope. notice how every time baby_scope is called I use scope: first
		add_prowess_skill = 1
		}
	}	
	
	after = { #after the event is done fucking anhiliate the generated kid. bug test this to see if it deletes guests too plz
		if = {
			limit = { NOT = {scope:baby_scope = { is_courtier_of = root }}}
			scope:baby_scope = { silent_disappearance_effect = yes }
		}
	}
}
class_event.0002 = { #Warrior: The Rogue
	type = character_event
	title = cl_class_event.0002.title
	trigger = {
        cl_warrior_xp_low = yes
        NOT = {
        has_character_flag = had_event_class_event.0002
        }
    }
	desc = {
	desc = cl_class_event.0002.desc
	triggered_desc = {
		trigger = {
			or = {
				has_trait = paranoid
				intrigue >= 14
			}
		}
	desc = cl_class_event.0002.desc2	
	}
	desc = cl_class_event.0002.desc3
	desc = cl_class_event.0002.desc4
	}
	theme = war
	override_background = wilderness_forest
	trigger = {
		has_trait = cl_warrior
		is_ai = no
		is_available = yes
		NOR = { 
		has_character_flag = had_event_class_event.0002
		has_trait_xp = {
						trait = cl_warrior
						track = fury
						value >= 30
					}
		has_trait_xp = {
						trait = cl_warrior
						track = arms
						value >= 30
					}			
		has_trait_xp = {
						trait = cl_warrior
						track = prot
						value >= 30
					}				
		}
		}
	left_portrait = { #what the left portrait in the event should be. root is you
		character = root 
	   	animation = lantern
	}
	right_portrait = { #same but for right. baby_scope is defined later
		character = scope:rogue_scope
		animation = aggressive_dagger
	}	
	immediate = {
		add_character_flag = {
			flag = had_event_class_event.0002
		}
		send_interface_toast = {
				type = event_toast_effect_bad
				title = "He stole your gold!"
				right_icon = ROOT
				remove_short_term_gold = minor_gold_value
			}
		create_character = {
				gender = male
				location = root.location
				culture = root.location.county.culture
				faith = root.location.county.faith
				age =  { 18 25 }
				trait = brave
				trait = generous
				trait = just
				trait = education_intrigue_4
				martial = {7 10}
				prowess = {11 12}
				intrigue = {9 12}
				dynasty = none #lowborn
				random_traits = no
				save_scope_as = rogue_scope
			}	
			scope:rogue_scope = {
				add_character_flag = {
					flag = rogue_flag
				}
			}
	}
		option = { #accept the challenge
		name = cl_class_event.0002.op1
		flavor = cl_class_event.0002.flavor
		stress_impact = { 
			craven = medium_stress_impact_gain
			wrathful = minor_stress_impact_gain
			lazy = minor_stress_impact_gain
			vengeful = medium_stress_impact_gain
			paranoid = medium_stress_impact_gain
			brave = minor_stress_impact_loss
		}
		duel = {
			skill = prowess
			target = scope:rogue_scope

			50 = {		
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
					min = -49
				}
				desc = cl_class_event.0002.op1.1
				custom_tooltip = cl_class_event.0002.custom2
				custom_tooltip = cl_class_event.0002.custom
				trigger_event = class_event.0004
			}
			50 = {		
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
					min = -49
				}
				desc = cl_class_event.0002.op1.2
				custom_tooltip = cl_class_event.0002.custom
				trigger_event = class_event.0003
			}
		}
	}
	option = { #kill em instantly 
	name = cl_class_event.0002.op2	
	stress_impact = { 
			craven = medium_stress_impact_gain
			calm = medium_stress_impact_gain
			lazy = minor_stress_impact_gain
			paranoid = medium_stress_impact_gain
			forgiving = medium_stress_impact_gain
			trusting = medium_stress_impact_gain
			compassionate = major_stress_impact_gain
			sadistic = medium_stress_impact_loss
			wrathful = minor_stress_impact_loss
		}
	unknown_murder_effect = {
						VICTIM = scope:rogue_scope
						MURDERER = root
						REASON = death_mysterious
					}
	add_short_term_gold = minor_gold_value		
	add_trait_xp = {trait = cl_warrior track=fury value=10}		
	}
	option = { #GUARDS!
	name = cl_class_event.0002.op3
	stress_impact = { 
			calm = minor_stress_impact_gain
			brave = medium_stress_impact_gain
			forgiving = medium_stress_impact_gain
			honest = minor_stress_impact_gain
			compassionate = medium_stress_impact_gain
			arbitrary = minor_stress_impact_gain
			compassionate = medium_stress_impact_gain
			just = minor_stress_impact_loss
		}
	rightfully_imprison_character_effect = {
			TARGET = scope:rogue_scope
			IMPRISONER = root
		}
	add_trait_xp = {trait = cl_warrior track=prot value=10}
	add_short_term_gold = minor_gold_value	
	}	
 after = {
	if = {
		limit = {
			scope:rogue_scope = {
				is_imprisoned = no
			}
		}
		scope:rogue_scope = { silent_disappearance_effect = yes }
	}
	}
}
class_event.0003 = {
	type = character_event
	title = "Warrior: The Duelist"
	left_portrait = { #what the left portrait in the event should be. root is you
		character = root 
	   	animation = severelywounded
	}
	theme = war
	override_background = wilderness_forest
	desc = cl_class_event.0003.desc
	option = {
		name = cl_class_event.0003.op1
		add_trait_xp = {trait = cl_warrior track=arms value=10}
		add_short_term_gold = minor_gold_value
	}
}
class_event.0004 = {
	type = character_event
	title = "Warrior: The Duelist"
	left_portrait = { #what the left portrait in the event should be. root is you
		character = root 
	   	animation = wrestling_victory
	}
	theme = war
	override_background = wilderness_forest
	desc = cl_class_event.0004.desc
	option = {
		name = cl_class_event.0004.op1
		add_trait_xp = {trait = cl_warrior track=arms value=10}
		add_short_term_gold = minor_gold_value
		add_gold = 10
	}
}
